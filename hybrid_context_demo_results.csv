representation,content,characters,tokens,token_efficiency_pct,char_per_token,context_quality,efficiency_score,test_case
pure_source,"#include <stdio.h>
int main() {
    printf(""Hello, World!\n"");
    return 0;
}",78,24,0.0,3.25,1.0,0.0,Hello World
pure_opcodes,a9bf7bfd910003fd90000000913e800094000004528000008c17bfdd65f03c0,63,29,-20.833333333333336,2.1724137931034484,0.3,-0.06250000000000001,Hello World
minimal_context,fn:int main() | a9bf7bfd910003fd90000000913e8000..08c17bfdd65f03c0,66,31,-29.166666666666668,2.129032258064516,0.7999999999999999,-0.2333333333333333,Hello World
function_flow,sig:int main() | cf:RETURN>OUTPUT | a9bf7bfd910003fd90000000913e8000..08c17bfdd65f03c0,86,37,-54.166666666666664,2.324324324324324,0.95,-0.5145833333333333,Hello World
vars_opcodes,vars: | a9bf7bfd910003fd90000000913e8000..08c17bfdd65f03c0,58,29,-20.833333333333336,2.0,0.7,-0.14583333333333334,Hello World
complete_context,fn:int main() | vars: | cf:RETURN>OUTPUT | opc:a9bf7bfd910003fd90000000913e8000..08c17bfdd65f03c0,97,41,-70.83333333333334,2.3658536585365852,1.0,-0.7083333333333335,Hello World
adaptive,fn:int main() | cf:RETURN>OUTPUT | a9bf7bfd910003fd90000000913e8000..08c17bfdd65f03c0,85,37,-54.166666666666664,2.2972972972972974,0.95,-0.5145833333333333,Hello World
compressed_hybrid,"int main() {; printf(""Hello, World!\n"");; return 0; | a9bf7bfd910003fd90000000913e8000..08c17bfdd65f...",104,45,-87.5,2.311111111111111,0.6,-0.525,Hello World
pure_source,"#include <stdio.h>
int factorial(int n) {
    if (n <= 1) return 1;
    return n * factorial(n - 1);...",195,64,0.0,3.046875,1.0,0.0,Factorial Recursive
pure_opcodes,7100043f5400004c528000201b007c20d65f03c052800140aa0003e094000001b900037f90000000913e8000940000045280...,120,55,14.0625,2.1818181818181817,0.3,0.0421875,Factorial Recursive
minimal_context,fn:int factorial(int n)  | 7100043f5400004c52800020*d65f03c0x2*52800000x2,73,34,46.875,2.1470588235294117,0.7999999999999999,0.375,Factorial Recursive
function_flow,sig:int factorial(int n) | int main() | cf:BRANCH>RETURN>OUTPUT | 7100043f5400004c52800020*d65f03c0x...,112,46,28.125,2.4347826086956523,0.95,0.2671875,Factorial Recursive
vars_opcodes,vars:int result = factorial(5) | 7100043f5400004c52800020*d65f03c0x2*52800000x2,79,35,45.3125,2.257142857142857,0.7,0.31718749999999996,Factorial Recursive
complete_context,fn:int factorial(int n) | int main() | vars:int result = factorial(5) | cf:BRANCH>RETURN>OUTPUT | op...,148,56,12.5,2.642857142857143,1.0,0.125,Factorial Recursive
adaptive,fn:int factorial(int n)  | cf:BRANCH>RETURN>OUTPUT | vars:int result = factorial(5) | 7100043f540000...,132,52,18.75,2.5384615384615383,1.0,0.1875,Factorial Recursive
compressed_hybrid,int factorial(int n) {; if (n <= 1) return 1;; return n * factorial(n - 1);; int main() { | 7100043f...,138,59,7.8125,2.3389830508474576,0.6,0.046875,Factorial Recursive
pure_source,"#include <stdio.h>
int main() {
    int numbers[] = {1, 2, 3, 4, 5};
    int sum = 0;
    for (int i...",198,78,0.0,2.5384615384615383,1.0,0.0,Array Processing
pure_opcodes,52800020528000409900037f528000809900037f528000a09900037f528000c09900037f528000e09900037f528000009900...,128,52,33.33333333333333,2.4615384615384617,0.3,0.09999999999999998,Array Processing
minimal_context,fn:int main()  | 52800020528000409900037f*9900037fx6,52,22,71.7948717948718,2.3636363636363638,0.7999999999999999,0.5743589743589743,Array Processing
function_flow,sig:int main() | for (int i = 0; i < 5; i++) | cf:LOOP>RETURN>OUTPUT | 52800020528000409900037f*9900...,106,45,42.30769230769231,2.3555555555555556,0.95,0.4019230769230769,Array Processing
vars_opcodes,"vars:int numbers[] = {1, 2, 3, 4, 5} | int sum = 0 | for (int i = 0 i < 5 i++) { | 52800020528000409...",118,58,25.64102564102564,2.0344827586206895,0.7,0.17948717948717946,Array Processing
complete_context,"fn:int main() | for (int i = 0; i < 5; i++) | vars:int numbers[] = {1, 2, 3, 4, 5} | int sum = 0 | f...",192,88,-12.82051282051282,2.1818181818181817,1.0,-0.1282051282051282,Array Processing
adaptive,fn:int main()  | cf:LOOP>RETURN>OUTPUT | 52800020528000409900037f*9900037fx6,76,30,61.53846153846154,2.533333333333333,0.95,0.5846153846153846,Array Processing
compressed_hybrid,"int main() {; int numbers[] = {1, 2, 3, 4, 5};; int sum = 0;; for (int i = 0; i < 5; i++) { | 528000...",129,64,17.94871794871795,2.015625,0.6,0.10769230769230768,Array Processing
pure_source,"#include <stdio.h>
int main() {
    char str[] = ""hello"";
    int length = 0;
    while (str[length]...",187,57,0.0,3.280701754385965,1.0,0.0,String Length
pure_opcodes,528d4ca0b900037f90000000f90007e0528000009900037f39400000710001405400004811000400390000007100014054ff...,104,43,24.561403508771928,2.4186046511627906,0.3,0.07368421052631578,String Length
minimal_context,fn:int main() | 528d4ca0b900037f90000000*71000140x2,51,24,57.89473684210527,2.125,0.7999999999999999,0.4631578947368421,String Length
function_flow,sig:int main() | cf:WHILE>RETURN>OUTPUT | 528d4ca0b900037f90000000*71000140x2,77,33,42.10526315789473,2.3333333333333335,0.95,0.3999999999999999,String Length
vars_opcodes,"vars:char str[] = ""hello"" | int length = 0 | 528d4ca0b900037f90000000*71000140x2",80,35,38.59649122807017,2.2857142857142856,0.7,0.2701754385964912,String Length
complete_context,"fn:int main() | vars:char str[] = ""hello"" | int length = 0 | cf:WHILE>RETURN>OUTPUT | opc:528d4ca0b9...",125,50,12.280701754385964,2.5,1.0,0.12280701754385964,String Length
adaptive,"fn:int main() | cf:WHILE>RETURN>OUTPUT | vars:char str[] = ""hello""  | 528d4ca0b900037f90000000*71000...",105,44,22.807017543859647,2.3863636363636362,1.0,0.22807017543859648,String Length
compressed_hybrid,"int main() {; char str[] = ""hello"";; int length = 0;; while (str[length] != '\0') { | 528d4ca0b90003...",121,49,14.035087719298245,2.4693877551020407,0.6,0.08421052631578947,String Length
